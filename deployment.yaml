apiVersion: apps/v1
kind: Deployment
metadata:
  name: eth-proxy-api
  namespace: cc-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eth-proxy-api
  template:
    metadata:
      labels:
        app: eth-proxy-api
    spec:
      automountServiceAccountToken: true
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
      - name: eth-proxy-api
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        imagePullPolicy: Always
        env:
          - name: ETH_PROXY_HOST
            value: "eth-webserver.cc-dev.svc.cluster.local"
          - name: PAYMENT_PROCESSOR_HOST
            value: "eth-payment-processor.cc-dev.svc.cluster.local"
          - name: DB_HOST
            value: "eth-postgresql.cc-dev.svc.cluster.local"
          - name: DB_USERNAME
            value: ethuser
          - name: DB_PASSWORD
            value: BaAUYWsfnSn47vaf4cBuFxrZJ6QHGTLf
          - name: DB_DATABASE
            value: ethereum
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "1"
            memory: "1024Mi"
          requests:
            cpu: "500m"
            memory: "100Mi"
---

apiVersion: v1
kind: Service
metadata:
  name: eth-proxy-api
  namespace: cc-dev
  labels:
    app: eth-proxy-api
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: eth-proxy-api
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eth-proxy-api
  namespace: cc-dev
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: eth-api.core.cloudchainsinc.com
    http:
      paths:
      - backend:
          serviceName: eth-proxy-api
          servicePort: 8080
